BEGIN	
    CREATE OR REPLACE TABLE ACCOUNT AS
    SELECT * FROM PC_FIVETRAN_DB.VN_QB.ACCOUNT;
    
    CREATE OR REPLACE TABLE APAR AS
    SELECT * FROM PC_FIVETRAN_DB.VN_QB_QUICKBOOKS.QUICKBOOKS__AP_AR_ENHANCED;

    CREATE OR REPLACE TABLE BS AS
    SELECT * FROM PC_FIVETRAN_DB.VN_QB_QUICKBOOKS.QUICKBOOKS__BALANCE_SHEET;

    CREATE OR REPLACE TABLE EXP_SAL AS
    SELECT * FROM PC_FIVETRAN_DB.VN_QB_QUICKBOOKS.QUICKBOOKS__EXPENSES_SALES_ENHANCED;

    CREATE OR REPLACE TABLE GL_TIME AS
    SELECT * FROM PC_FIVETRAN_DB.VN_QB_QUICKBOOKS.QUICKBOOKS__GENERAL_LEDGER_BY_PERIOD;

    CREATE OR REPLACE TABLE GL AS
  	SELECT *, 
         DATE_TRUNC('MONTH', TRANSACTION_DATE) AS PERIOD_FIRST_DAY,
         CASE WHEN LAST_DAY(TRANSACTION_DATE) = TRANSACTION_DATE THEN TRANSACTION_DATE
              ELSE LAST_DAY(TRANSACTION_DATE)
         END AS PERIOD_LAST_DAY
  	FROM (SELECT *
        FROM PC_FIVETRAN_DB.VN_QB_QUICKBOOKS.QUICKBOOKS__GENERAL_LEDGER
        WHERE 1=0);

	INSERT INTO GL
	SELECT *, 
       DATE_TRUNC('MONTH', TRANSACTION_DATE) AS PERIOD_FIRST_DAY,
       CASE WHEN LAST_DAY(TRANSACTION_DATE) = TRANSACTION_DATE THEN TRANSACTION_DATE
            ELSE LAST_DAY(TRANSACTION_DATE)
       END AS PERIOD_LAST_DAY
	FROM PC_FIVETRAN_DB.VN_QB_QUICKBOOKS.QUICKBOOKS__GENERAL_LEDGER;

    CREATE OR REPLACE TABLE PL AS
    SELECT * FROM PC_FIVETRAN_DB.VN_QB_QUICKBOOKS.QUICKBOOKS__PROFIT_AND_LOSS;

    CREATE OR REPLACE TABLE BUDGET AS
    SELECT bd.*, 
           a.CLASSIFICATION AS ACCOUNT_CLASS,
           b.NAME AS BUDGET_NAME, 
           a.NAME AS ACCOUNT_NAME, 
           a.ACCOUNT_TYPE,
           bd.BUDGET_DATE AS PERIOD_FIRST_DAY,
           CASE WHEN LAST_DAY(BUDGET_DATE) = BUDGET_DATE THEN BUDGET_DATE
			ELSE LAST_DAY(BUDGET_DATE)
    	   END AS PERIOD_LAST_DAY
    FROM pc_fivetran_db.VN_QB.BUDGET_DETAIL bd
    JOIN pc_fivetran_db.VN_QB.BUDGET b ON bd.BUDGET_ID = b.ID
    JOIN pc_fivetran_db.VN_QB.ACCOUNT a ON bd.ACCOUNT_ID = a.ID;

    ALTER TABLE BUDGET DROP COLUMN BUDGET_DATE;
    
  END;

CREATE OR REPLACE PROCEDURE LOAD_DATA() 
RETURNS STRING 
LANGUAGE SQL 
AS 
$$
BEGIN    
    CREATE OR REPLACE TABLE ACCOUNT AS
    SELECT * FROM PC_FIVETRAN_DB.VN_QB.ACCOUNT;
    
    CREATE OR REPLACE TABLE APAR AS
    SELECT * FROM PC_FIVETRAN_DB.VN_QB_QUICKBOOKS.QUICKBOOKS__AP_AR_ENHANCED;

    CREATE OR REPLACE TABLE BS AS
    SELECT * FROM PC_FIVETRAN_DB.VN_QB_QUICKBOOKS.QUICKBOOKS__BALANCE_SHEET;

    CREATE OR REPLACE TABLE EXP_SAL AS
    SELECT * FROM PC_FIVETRAN_DB.VN_QB_QUICKBOOKS.QUICKBOOKS__EXPENSES_SALES_ENHANCED;

    CREATE OR REPLACE TABLE GL_TIME AS
    SELECT * FROM PC_FIVETRAN_DB.VN_QB_QUICKBOOKS.QUICKBOOKS__GENERAL_LEDGER_BY_PERIOD;

    CREATE OR REPLACE TABLE GL AS
  	SELECT *, 
         DATE_TRUNC('MONTH', TRANSACTION_DATE) AS PERIOD_FIRST_DAY,
         CASE WHEN LAST_DAY(TRANSACTION_DATE) = TRANSACTION_DATE THEN TRANSACTION_DATE
              ELSE LAST_DAY(TRANSACTION_DATE)
         END AS PERIOD_LAST_DAY
  	FROM (SELECT *
        FROM PC_FIVETRAN_DB.VN_QB_QUICKBOOKS.QUICKBOOKS__GENERAL_LEDGER
        WHERE 1=0);

	INSERT INTO GL
	SELECT *, 
       DATE_TRUNC('MONTH', TRANSACTION_DATE) AS PERIOD_FIRST_DAY,
       CASE WHEN LAST_DAY(TRANSACTION_DATE) = TRANSACTION_DATE THEN TRANSACTION_DATE
            ELSE LAST_DAY(TRANSACTION_DATE)
       END AS PERIOD_LAST_DAY
	FROM PC_FIVETRAN_DB.VN_QB_QUICKBOOKS.QUICKBOOKS__GENERAL_LEDGER;

    CREATE OR REPLACE TABLE PL AS
    SELECT * FROM PC_FIVETRAN_DB.VN_QB_QUICKBOOKS.QUICKBOOKS__PROFIT_AND_LOSS;

    CREATE OR REPLACE TABLE BUDGET AS
    SELECT bd.*, 
           a.CLASSIFICATION AS ACCOUNT_CLASS,
           b.NAME AS BUDGET_NAME, 
           a.NAME AS ACCOUNT_NAME, 
           a.ACCOUNT_TYPE,
           bd.BUDGET_DATE AS PERIOD_FIRST_DAY,
           CASE WHEN LAST_DAY(BUDGET_DATE) = BUDGET_DATE THEN BUDGET_DATE
			ELSE LAST_DAY(BUDGET_DATE)
    	   END AS PERIOD_LAST_DAY
    FROM pc_fivetran_db.VN_QB.BUDGET_DETAIL bd
    JOIN pc_fivetran_db.VN_QB.BUDGET b ON bd.BUDGET_ID = b.ID
    JOIN pc_fivetran_db.VN_QB.ACCOUNT a ON bd.ACCOUNT_ID = a.ID;

    ALTER TABLE BUDGET DROP COLUMN BUDGET_DATE;
    
    RETURN 'Data loaded successfully';
END;
$$;

CREATE OR REPLACE TASK LOAD_VN_QB_DATA
    WAREHOUSE = COMPUTE_WH
    SCHEDULE = 'USING CRON 0 9 * * * America/New_York'
AS
CALL LOAD_DATA();

ALTER TASK LOAD_VN_QB_DATA
    RESUME;



