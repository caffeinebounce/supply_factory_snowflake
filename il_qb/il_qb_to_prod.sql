CREATE OR REPLACE PROCEDURE PROD_QB.LOAD_DATA() 
RETURNS STRING 
LANGUAGE SQL 
AS 
$$
BEGIN	
    CREATE OR REPLACE TABLE PROD_QB.ACCOUNT AS
    SELECT * FROM PC_FIVETRAN_DB.QUICKBOOKS.ACCOUNT;

    CREATE OR REPLACE TABLE PROD_QB.ITEMS AS
    SELECT * FROM PC_FIVETRAN_DB.QUICKBOOKS.ITEM;
    
    CREATE OR REPLACE TABLE PROD_QB.APAR AS
    SELECT * FROM PC_FIVETRAN_DB.QB_QUICKBOOKS.QUICKBOOKS__AP_AR_ENHANCED;

    CREATE OR REPLACE TABLE PROD_QB.BS AS
    SELECT * FROM PC_FIVETRAN_DB.QB_QUICKBOOKS.QUICKBOOKS__BALANCE_SHEET;

    CREATE OR REPLACE TABLE PROD_QB.CF AS
  	SELECT *, 
              DATE_TRUNC('MONTH', CASH_FLOW_PERIOD) AS PERIOD_FIRST_DAY,
              CASE WHEN LAST_DAY(CASH_FLOW_PERIOD) = CASH_FLOW_PERIOD THEN CASH_FLOW_PERIOD
                     ELSE LAST_DAY(CASH_FLOW_PERIOD)
              END AS PERIOD_LAST_DAY
  	FROM (SELECT *
              FROM PC_FIVETRAN_DB.QB_QUICKBOOKS.QUICKBOOKS__CASH_FLOW_STATEMENT
              WHERE 1=0);

	INSERT INTO PROD_QB.CF
	SELECT *, 
       DATE_TRUNC('MONTH', CASH_FLOW_PERIOD) AS PERIOD_FIRST_DAY,
       CASE WHEN LAST_DAY(CASH_FLOW_PERIOD) = CASH_FLOW_PERIOD THEN CASH_FLOW_PERIOD
            ELSE LAST_DAY(CASH_FLOW_PERIOD)
       END AS PERIOD_LAST_DAY
	FROM PC_FIVETRAN_DB.QB_QUICKBOOKS.QUICKBOOKS__CASH_FLOW_STATEMENT;

    CREATE OR REPLACE TABLE PROD_QB.EXP_SAL AS
    SELECT * FROM PC_FIVETRAN_DB.QB_QUICKBOOKS.QUICKBOOKS__EXPENSES_SALES_ENHANCED;

    CREATE OR REPLACE TABLE PROD_QB.GL_TIME AS
    SELECT * FROM PC_FIVETRAN_DB.QB_QUICKBOOKS.QUICKBOOKS__GENERAL_LEDGER_BY_PERIOD;

    CREATE OR REPLACE TABLE PROD_QB.GL AS
  	SELECT *, 
         DATE_TRUNC('MONTH', TRANSACTION_DATE) AS PERIOD_FIRST_DAY,
         CASE WHEN LAST_DAY(TRANSACTION_DATE) = TRANSACTION_DATE THEN TRANSACTION_DATE
              ELSE LAST_DAY(TRANSACTION_DATE)
         END AS PERIOD_LAST_DAY
  	FROM (SELECT *
        FROM PC_FIVETRAN_DB.QB_QUICKBOOKS.QUICKBOOKS__GENERAL_LEDGER
        WHERE 1=0);

	INSERT INTO PROD_QB.GL
	SELECT *, 
       DATE_TRUNC('MONTH', TRANSACTION_DATE) AS PERIOD_FIRST_DAY,
       CASE WHEN LAST_DAY(TRANSACTION_DATE) = TRANSACTION_DATE THEN TRANSACTION_DATE
            ELSE LAST_DAY(TRANSACTION_DATE)
       END AS PERIOD_LAST_DAY
	FROM PC_FIVETRAN_DB.QB_QUICKBOOKS.QUICKBOOKS__GENERAL_LEDGER;

    CREATE OR REPLACE TABLE PROD_QB.PL AS
    SELECT * FROM PC_FIVETRAN_DB.QB_QUICKBOOKS.QUICKBOOKS__PROFIT_AND_LOSS;

    CREATE OR REPLACE TABLE PROD_QB.BUDGET AS
    SELECT bd.*, 
           a.CLASSIFICATION AS ACCOUNT_CLASS,
           b.NAME AS BUDGET_NAME, 
           a.NAME AS ACCOUNT_NAME, 
           a.ACCOUNT_TYPE,
           bd.BUDGET_DATE AS PERIOD_FIRST_DAY,
           CASE WHEN LAST_DAY(BUDGET_DATE) = BUDGET_DATE THEN BUDGET_DATE
			ELSE LAST_DAY(BUDGET_DATE)
    	   END AS PERIOD_LAST_DAY
    FROM pc_fivetran_db.QUICKBOOKS.BUDGET_DETAIL bd
    JOIN pc_fivetran_db.QUICKBOOKS.BUDGET b ON bd.BUDGET_ID = b.ID
    JOIN pc_fivetran_db.QUICKBOOKS.ACCOUNT a ON bd.ACCOUNT_ID = a.ID;

    ALTER TABLE PROD_QB.BUDGET DROP COLUMN BUDGET_DATE;
    
END;
$$;

CREATE OR REPLACE TASK LOAD_QB_DATA
    WAREHOUSE = COMPUTE_WH
    SCHEDULE = 'USING CRON 0 9 * * * America/New_York'
AS
CALL LOAD_DATA();

ALTER TASK LOAD_QB_DATA
    RESUME;

CALL LOAD_DATA();